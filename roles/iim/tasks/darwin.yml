---
- name: Create temporary directory
  file:
    path: /tmp/iim
    recurse: yes
    mode: 0755
    state: directory
  register: tmp_dir

- name: Copy installer
  copy:
    src: "{{ iim_installer_path }}"
    dest: "{{ tmp_dir.path }}/"
  when: download_url is not defined
  register: iim_zip

- name: Download installer
  get_url:
    url: "{{ download_url }}/{{ iim_installer_path }}"
    dest: "{{ tmp_dir.path }}/"
    headers: "{{ download_header }}"
  when: download_url is defined
  register: iim_zip

- name: Extract IIM installer
  unarchive:
    src: "{{ iim_zip.dest }}"
    dest: "{{ tmp_dir.path }}"
    remote_src: yes
    mode: 0755
    creates: "{{ tmp_dir.path }}/install"

- name: Run IIM installer
  command:
    cmd: ./installc -acceptLicense -iD {{ iim_install_path }}
    chdir: "{{ tmp_dir.path }}"
    creates: "{{ iim_install_path }}"
  become: yes

- name: Fix IIM ownership
  file:
    path: "{{ iim_install_path }}"
    owner: "{{ ansible_user }}"
    state: directory
    mode: 0755
    recurse: yes
  become: yes

- name: Delete temporary directory
  file:
    path: "{{ tmp_dir.path }}"
    state: absent
  become: yes
